
<%# render plain: params[:page].inspect %>

<h2 class="edit_title edit_font">Editing "<%= @page.title %>"</h2>
<%= form_for @page, html: { id: 'page_form' } do |f| %>
  <div class="form_group">
    <%= f.label :title_review, "Title", class: 'form_label' %><br>
    <%= f.text_field :title_review, class: 'text_field' %>
  </div>
	<div class="category_label form_group">
    <%= f.label :category, "Category:" %>
		<%= collection_select :page, :category_review, Category.order(:id), :id, :name, prompt: true, selected: @page.category_id %>
	</div>
	<div class="form_group">
    <%= hidden_field(:page, :last_user_edit, value: current_user.username) %>
    <%= hidden_field(:page, :approval_status_id, value: PENDING) %>
  </div>
	<div class="form_group">
		<%= f.label :content_review, 'Edit Content', class: 'form_label'%>
		<%= f.hidden_field :content_review, :id => "post-content", required: true %>
		<div id="editor-container" hidden="true">
			<span class="ql-formats">
          <button class="ql-hr"></button> 
        </span>
		</div>
		<div id="toolbar">
			<span class="ql-formats">
				<select class="ql-font">
					<option selected></option>
					<option value="serif"></option>
					<option value="monospace"></option>
				</select>
			</span>
			<span class="ql-formats">
				<select class="ql-size">
					<option value="small"></option>
					<option selected></option>
					<option value="large"></option>
					<option value="huge"></option>
				</select>
			</span>
			<span class="ql-formats">
				<button class="ql-header" value="1"></button>
				<button class="ql-header" value="2"></button>
				<button class="ql-blockquote"></button>
				<button class="ql-code-block"></button>
				<button class="ql-hr"><b>â€”</b></button>
			</span>
			<span class="ql-formats">
				<button class="ql-bold"></button>
				<button class="ql-italic"></button>
				<button class="ql-underline"></button>
				<button class="ql-strike"></button>
			</span>
			<span class="ql-formats">
				<button class="ql-list" value="ordered"></button>
				<button class="ql-list" value="bullet"></button>
				<button class="ql-indent" value="-1"></button>
				<button class="ql-indent" value="+1"></button>
			</span>
			<span class="ql-formats">
				<button class="ql-direction" value="rtl"></button>
				<select class="ql-align">
					<option selected></option>
					<option value="center"></option>
					<option value="right"></option>
					<option value="justify"></option>
				</select>
			</span>
			<span class="ql-formats">
				<button class="ql-link"></button>
				<button class="ql-image"></button>
			</span>
			<span class="ql-formats">
				<button class="ql-clean"></button>
			</span>
		</div>
		<div id="editor"><%= sanitize @page.content %></div>
	</div>
  <div class="form_group">
    <%= f.submit "Save changes", class: "edit_button" %>
		<button onclick="goBack()" class="edit_button" id="cancel_button">Cancel</button>
  </div>
<% end %>


<head><link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet"></head>

<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<!-- Initialize Quill editor -->
<script>

	let Inline = Quill.import('blots/inline'); 
	class MarkBlot extends Inline { } 
	MarkBlot.blotName = 'mark'; 
	MarkBlot.tagName = 'mark'; 
	Quill.register(MarkBlot);

	let Embed = Quill.import('blots/block/embed');
	class HR extends Embed { 
		static create(value) {
        let node = super.create(value);
        // give it some margin
        node.setAttribute('style', "height:0px; margin-top:10px; margin-bottom:10px;");
        return node;
    }
	}
	HR.blotName = 'hr';
	HR.tagName = 'hr';
	Quill.register(HR);

	var customHrHandler = function(){
    // get the position of the cursor
    var range = quill.getSelection();
    if (range) {
        // insert the <hr> where the cursor is
        quill.insertEmbed(range.index,"hr","null")
    }
	}

	Quill.register({
    'formats/hr': HR
	});

	// // Custom font size module.
	// var Size = Quill.import('attributors/style/size');
	// Size.whitelist = ['14px', '16px', '18px', '24px'];
	// Quill.register(Size, true);

  var form = document.querySelector('#page_form');
  var quill = new Quill('#editor', {
		modules: {
			toolbar: {
				container: '#toolbar',
				handlers: {
					'hr': customHrHandler
				}
			}
		},
		theme: 'snow'
	});

  form.onsubmit = function() {
  var postContentInput = document.querySelector('#post-content');
  postContentInput.value = quill.root.innerHTML;
};
</script>


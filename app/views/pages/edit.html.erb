
<%# render plain: params[:page].inspect %>

<h2 class="edit_title edit_font">Editing "<%= @page.title %>"</h2>
<%= form_for @page, html: { id: 'page_form' } do |f| %>
  <div class="form_group">
    <%= f.label :title, class: 'form_label' %><br>
    <%= f.text_field :title, class: 'text_field' %>
  </div>
	<div class="form_group">
		<%= f.label :content, 'Edit Content', class: 'form_label'%>
		<%= f.hidden_field :content, :id => "post-content", required: true %>
		<div id="editor-container" hidden="true">
			<span class="ql-formats">
          <button class="ql-hr"></button> 
        </span>
		</div>
		
		<div id="editor"><%= raw sanitize @page.content %></div>
		<div id="counter">0</div>
	</div>
  <div class="form_group">
    <%= f.submit "Save changes", class: "edit_button" %>
  </div>
<% end %>

<button id="divider-button">Horizontal rule</button>

<button id="right">Right</button>
<button id="left">Left</button>
<button id="center">center</button>

<head><link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet"></head>

<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<!-- Initialize Quill editor -->
<script>

	// Custom font size module.
	var Size = Quill.import('attributors/style/size');
	Size.whitelist = ['14px', '16px', '18px', '24px'];
	Quill.register(Size, true);

	// Implement and register module
	Quill.register('modules/counter', function(quill, options) {
		var container = document.querySelector('#counter');
		quill.on('text-change', function() {
			var text = quill.getText();
			// There are a couple issues with counting words
			// this way but we'll fix these later
			container.innerText = text.split(/\s+/).length;
		});
	});


	var options = {
		modules: {
			toolbar: [
				[{ 'size': ['14px', '16px', '18px', '24px'] }],
				[{ header: [1, 2, 3, false] }],
				[{ 'font': [] }],
				['bold', 'italic', 'underline', 'strike'],
				[{ 'color': [] }, { 'background': [] }],
				[{ 'list': 'ordered'}, { 'list': 'bullet' }],
				[{ 'align': [] }],
				[{ 'indent': '-1'}, { 'indent': '+1' }], 
				['blockquote', 'code-block'],
				['link', 'image', 'video']
			]
		},
		placeholder: 'Enter wiki content here.',
		theme: 'snow'
	}
  var form = document.querySelector('#page_form');
  var quill = new Quill('#editor', options);

// 	class Divider extends BlockEmbed {
// 		static create(value) {
// 			const node = super.create(value);
// 			node.contentEditable = 'false';
// 			this._addDivider(node, value);
// 			return node;
// 		}

// 		static value(node) {
// 			return node.getAttribute(Divider.blotName)
// 		}

// 		static _addDivider(node, value) {
// 			node.setAttribute(Divider.blotName, value);

// 			// This is a simple switch, but you can use
// 			// whatever method of building HTML you need.
// 			// Could even be async.
// 			switch (value) {
// 				case 1:
// 					return this._addDivider1(node);
// 				default:
// 					throw new Error(`Unknown signature type ${ value }`);
// 			}
// 		}

// 		static _addDivider1(node) {
// 			const hr = document.createElement('hr');
			
// 			node.appendChild(hr);
// 		}
// 	}
// 	Divider.blotName = 'divider';
// 	Divider.tagName = 'hr';
// 	Divider.className = 'ql-divider';

// 	Quill.register(Divider);

// 	document.querySelector('#divider-button').addEventListener('click', function() {
// 		quill.updateContents([
// 			{ insert: { divider: 1 } },
// 		]);
// 	});

// 	quill.updateContents([
//   { insert: { divider: 1 } },
// ]);

  form.onsubmit = function() {
  var postContentInput = document.querySelector('#post-content');
  postContentInput.value = quill.root.innerHTML;
};

document.getElementById("center").addEventListener("click", function() { alert(window.getSelection().anchorNode); });
document.getElementById("left").addEventListener("click", function() { window.getSelection().style.float = "left"; });
document.getElementById("right").addEventListener("click", function() { window.getSelection().style.float = "right"; });
document.getElementsByTagName("img").addEventListener("click", function() { alert(window.getSelection().anchorNode.parentNode.innerHTML); });

// var range = window.getSelection().getRangeAt(0),
//   content = range.extractContents(),
//      span = document.createElement('SPAN');

// span.appendChild(content);
// var htmlContent = span.innerHTML;

// range.insertNode(span);

// alert(htmlContent);

var float_right = function() {
	window.getSelection().anchorNode.parentNode.style.float = "right";
}


// var Embed = Quill.import('blots/block/embed');

// class Hr extends Embed {
//     static create(value) {
//         let node = super.create(value);
//         // give it some margin
//         node.setAttribute('style', "height:0px; margin-top:10px; margin-bottom:10px;");
//         return node;
//     }
// }

// Hr.blotName = 'hr'; //now you can use .ql-hr classname in your toolbar
// Hr.className = 'my-hr';
// Hr.tagName = 'hr';

// var customHrHandler = function(){
//     // get the position of the cursor
//     var range = quill.getSelection();
//     if (range) {
//         // insert the <hr> where the cursor is
//         quill.insertEmbed(range.index,"hr","null")
//     }
// }

// Quill.register({
//     'formats/hr': Hr
// });
</script>


<h1 class="edit_title edit_font">New Wiki</h1>

<%= render plain: params[:page].inspect %>

<%= form_for :page, url: pages_path, html: { id: 'page_form' } do |f| %>
  <div class="form_group">
    <%= f.label :title, "Title", class: "form_label" %><br>
    <%= f.text_field :title, class: "text_field" %>
  </div>
  <div class="form_group">
    <%= hidden_field(:page, :user_id, value: current_user.id) %>
    <%= hidden_field(:page, :approval_status_id, value: PENDING) %>
		<%= hidden_field(:page, :last_user_edit, value: current_user.username) %>
  </div>
	<div class="category_label form_group">
    <%= f.label :category, "Category:" %>
		<%= collection_select :page, :category_id, Category.order(:id), :id, :name, prompt: true %>
	</div>
  <div class="form_group">
    <%= f.label :content, class: "form_label" %><br>
      <div class="form-group">
      <%= f.hidden_field :content, :id => "post-content", required: true %>
      <div id="editor-container" hidden="true"></div>
      <div id="toolbar">
			<span class="ql-formats">
				<select class="ql-font">
					<option selected></option>
					<option value="serif"></option>
					<option value="monospace"></option>
				</select>
			</span>
			<span class="ql-formats">
				<select class="ql-size">
					<option value="small"></option>
					<option selected></option>
					<option value="large"></option>
					<option value="huge"></option>
				</select>
			</span>
			<span class="ql-formats">
				<button class="ql-header" value="1"></button>
				<button class="ql-header" value="2"></button>
				<button class="ql-blockquote"></button>
				<button class="ql-code-block"></button>
				<button class="ql-hr"><b>â€”</b></button>
			</span>
			<span class="ql-formats">
				<button class="ql-bold"></button>
				<button class="ql-italic"></button>
				<button class="ql-underline"></button>
				<button class="ql-strike"></button>
			</span>
			<span class="ql-formats">
				<button class="ql-list" value="ordered"></button>
				<button class="ql-list" value="bullet"></button>
				<button class="ql-indent" value="-1"></button>
				<button class="ql-indent" value="+1"></button>
			</span>
			<span class="ql-formats">
				<button class="ql-direction" value="rtl"></button>
				<select class="ql-align">
					<option selected></option>
					<option value="center"></option>
					<option value="right"></option>
					<option value="justify"></option>
				</select>
			</span>
			<span class="ql-formats">
				<button class="ql-link"></button>
				<button class="ql-image"></button>
			</span>
			<span class="ql-formats">
				<button class="ql-clean"></button>
			</span>
		</div>
      <div id="editor"></div>
    </div>
  </div>
  <div class="form_group">
    <%= f.submit "Submit for review", class: "edit_button" %>
  </div>
<% end %>

<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<!-- Initialize Quill editor -->
<script>
	function load() {
		let Inline = Quill.import('blots/inline'); 
		class MarkBlot extends Inline { } 
		MarkBlot.blotName = 'mark'; 
		MarkBlot.tagName = 'mark'; 
		Quill.register(MarkBlot);

		let Embed = Quill.import('blots/block/embed');
		class HR extends Embed { 
			static create(value) {
					let node = super.create(value);
					// give it some margin
					node.setAttribute('style', "height:0px; margin-top:10px; margin-bottom:10px;");
					return node;
			}
		}
		HR.blotName = 'hr';
		HR.tagName = 'hr';
		Quill.register(HR);

		var customHrHandler = function(){
			// get the position of the cursor
			var range = quill.getSelection();
			if (range) {
					// insert the <hr> where the cursor is
					quill.insertEmbed(range.index,"hr","null")
			}
		}

		Quill.register({
			'formats/hr': HR
		});

		// // Custom font size module.
		// var Size = Quill.import('attributors/style/size');
		// Size.whitelist = ['14px', '16px', '18px', '24px'];
		// Quill.register(Size, true);

		var form = document.querySelector('#page_form');
		var quill = new Quill('#editor', {
			modules: {
				toolbar: {
					container: '#toolbar',
					handlers: {
						'hr': customHrHandler
					}
				}
			},
			theme: 'snow'
		});

		form.onsubmit = function() {
		var postContentInput = document.querySelector('#post-content');
		postContentInput.value = quill.root.innerHTML;
	};
}

document.addEventListener("DOMContentLoaded", load(), false);

</script>
<h3 class='show_title'><%= @video.name %></h3>
<hr>
<%= video_tag @video.path, size: "854x480", controls: true, poster: @path, id: 'video', class: 'video-player' %>
<div id="show_video_description"><%= @video.description %></div>

<%# Only supervisors and the executive can add custom thumbnails %>
<% if current_user.user_level_id == SUPERVISOR_VALUE || current_user.user_level_id == EXECUTIVE_VALUE %>
<button type="button" id="video_options_button" class="btn btn-dark my-2">Options</button>
<div class="hidden" id="video_options">
<%= form_for @video do |f| %>
  <div class="form_group">
    <%#= collection_select :video, :image_id, Image.where('video_path IS NOT NULL').order(:id), :id, :name, html: { class: 'form-control' } %>
    <%= f.label 'Pick a thumbnail' %>
    <%= f.select :image_id, Image.where(video_id: @video.id).order(:id).map { |i| [i.name, i.id] }, { selected: @video.image_id, include_blank: true }, { class: 'form-control' } %>
  </div>
  <div class="form_group">
    <%= f.submit 'Update', class: 'btn btn-primary float-left' %>
    <button type="button" id="capture_options_button" class="btn btn-secondary float-right">Create new thumbnail</button>
  </div>
<% end %>

<div id="capture_container" class="hidden">
<div class="alert alert-primary" role="alert">
  Adding a custom thumbnail:
  <ol>
    <li>Scroll through video and find a desired thumbnail.</li>
    <li>Click "Capture".</li>
    <li>Enter a name for the photo.</li>
    <li>Click "Create thumbnail".</li>
  </ol>
</div>
<div class="row">
<div class="col-6 d-flex">

<canvas id="canvas" class='hidden'></canvas>
<img id='video_image' style="width:284px; height:160px; border:2px solid black;" src="" />
<button id="capture" class="btn btn-secondary align-self-end mx-3">Capture</button>
</div><!--col-6-->
<div class="col-6">
<%= form_for Image.new, html: {class: '', id: 'upload_form'}, validate: true do |f| %>
  <div class="form-group">
    <%= f.label :name %>
    <%= f.text_field :name, class: 'form-control' %>
    <%= f.text_field :video_path, id: 'video_path_field', class: 'hidden' %>
    <%= hidden_field(:image, :video_id, value: @video.id) %>
  </div>
  <div class='form-group'>
    <%= f.submit 'Create thumbnail', class: 'btn btn-primary' %>
    <button type="button" id="capture_back_button" class="btn btn-secondary float-right">Back</button>
  </div>
<% end %>

</div>
</div><!--col-6-->
</div><!--row-->
</div><!--capture-container-->
<% end %>

<script>
  $('#upload_form').submit(function(event) {
    if ($.trim($('#image_name').val()).length < 1) {
      $('#image_name').addClass('is-invalid')
      event.preventDefault()
    }
  })


  $('#video_options_button').click(function() {
    let options = $('#video_options')
    if (options.css('display') == 'none') {
      options.show()
    } else {
      options.hide()
    }
  })

  $('#capture_back_button').click(function() {
    $('#capture_container').hide()
    $('.edit_video').show()
  })

  $('#capture_options_button').click(function() {
    let options = $('#capture_container')
    if (options.css('display') == 'none') {
      options.show()
      $('.edit_video').hide()
    } else {
      options.hide()
      $('.edit_video').show()
    }
  })



	var blobReader = new FileReader();

  function thumbnail(){
    var canvas = document.getElementById('canvas');
    var video = document.getElementById('video');
    canvas.height = 240;
    canvas.width = 426;
    canvas.getContext('2d').drawImage(video, 0, 0, 426, 240);
  }
  document.getElementById('capture').addEventListener('click', function(){
    thumbnail();	
    addImg();
    
    
  });

  // document.getElementById('video_thumbnail_upload').addEventListener('click', function(){
  //   var canvas = document.getElementById('canvas');
  //   var dataUrl = canvas.toDataURL("image/jpeg");
  //   var dataImg = document.createElement('img');
  //   dataImg.src = dataUrl;
  // });

  function addImg() {
    var canvas = document.getElementById('canvas');

    canvas.toBlob(function(blob) {
      var img = document.getElementById('video_image'),
          url = URL.createObjectURL(blob),
					div = document.getElementsByClassName('middle_content')[0];
			
			var base64 = "";
			blobReader.readAsDataURL(blob);
			blobReader.onloadend = function() {
				var result = blobReader.result;
				base64 = result.substr(result.indexOf(',')+1);
				var newImg = document.createElement('img');
				newImg.src = "data:image/jpeg;base64," + base64;
				newImg.id = "base64_image";
				document.body.appendChild(newImg);

				var full_base64 =  "data:image/jpeg;base64," + base64;
        document.querySelector('#video_path_field').value = full_base64;

				// $.ajax({
				// 	data: 'base64=' + full_base64,
				// 	type: 'POST',
				// 	url: "/videos/<%=@video.id%>/upload"
				// });
			}

			

      img.onload = function() {
        // no longer need to read the blob so it's revoked
        URL.revokeObjectURL(url);
      };

      img.src = url;
    });
  }
</script>